<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[编辑器之神-vim]]></title>
    <url>%2F2018%2F10%2F14%2FLinux%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%8B%E7%A5%9E-vim%2F</url>
    <content type="text"><![CDATA[本节原本属于”Linux基础二”一节，但私以为本节挺重要的，也经常要用到，为方便查找使用，故单开一篇文章，记录vim的各种常用命令 编辑器:gedit,sublime,vim gedit相对来说在程序员中不怎么使用，因为没有高亮等，不适合敲代码，一般对于python程序员来说，用的较多的是sublime,pycharm,vim等 sublime:ctrl+shift+d:全选ctrl+l:选中一行也可在命令行中用subl打开sublime vim1.vi vi三种模式：命令模式（默认），编辑模式，末行模式三种模式的转换：命令模式—&gt;i,a,o,I,A,O—&gt;编辑模式—&gt;esc—&gt;命令模式命令模式—&gt;”:”—&gt;末行模式—&gt;esc—&gt;命令模式 2.命令模式转编辑模式 命令模式下：i: 插入光标前一个字符I: 插入行首a: 插入光标后一个字符A: 插入行未o: 向下新开一行,插入行首O: 向上新开一行,插入行首 3.保存编辑 在命令模式下保存，shift+z+z末行模式下：w:保存,q:退出，wq:保存退出，x:保存退出q！:不保存强制退出 4.编辑器之神-vim vim是vi的强化版，支持更多的功能，自动补全:ctrl+n 5.vim移动，跳转 命令模式：上移:k下移:j左移:h右移:lhjkl控制上下作用 M中间位置L当前屏幕的最后一行G 跳到最后1行15G 表示跳转到第15行1G 表示跳转到第1行gg 跳转到第1行vi 文件+行数：打开文件并跳转到指定行数跳转行首：ctrl+a跳转行末：ctrl+e w: 在一行中向后智能快速跳转一个单词b: 向前智能快速跳转{: 按段移动,上移}: 按段移动,下移 Ctr-d: 向下翻半屏Ctr-u: 向上翻半屏Ctr-f: 向下翻一屏Ctr-b: 向上翻一屏 6.复制，粘贴，剪切 命令模式下：yy 复制，8yy：表示从当前光标所在的行开始复制8行p 粘贴dd 剪切，8dd：表示从当前光标所在的行开始剪切8行 7.撤销反撤销 命令模式下:u 撤销ctl+r 反撤销 8.删除 命令模式下:x: 删除光标后一个字符,相当于 DelX: 删除光标前一个字符,相当于 Backspacedd: 剪切光标所在行,n dd 删除指定的行数 D: 删除光标后本行所有内容,包含光标所在字符d0: 删除光标前本行所有内容,不包含光标所在字符dw: 删除光标开始位置的字,包含光标所在字符 9.重复执行 命令模式下:.: 重复上一次操作的命令 10.文本行移动 命令模式下:>&gt;: 文本行右移&lt;&lt;: 文本行左移 11.可视模式 命令模式下:v: 按字符移动,选中文本V: 按行移动,选中文本可视模式可以配合 d, y, &gt;&gt;, &lt;&lt; 实现对文本块的删除,复制,左右移动 12.替换操作 命令模式下:r: 替换当前字符R: 替换当前行光标后的字符r +字符:直接在命令模式下修改光标下的字符 13.查找 命令模式下：/+str: 查找str再回车，n: 下一个N：上一个 14.替换命令 末行模式下，把abc全部替换成123:%s/abc/123/g末行模式下，将第一行至第10行之间的abc替换成123:1, 10s/abc/123/g 15.vim里执行 shell 下命令: 末行模式里输入!,后面跟命令]]></content>
      <categories>
        <category>Linux基础</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux基础二]]></title>
    <url>%2F2018%2F10%2F13%2FLinux%E5%9F%BA%E7%A1%80%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[1.压缩解压缩压缩文件：zip [-r] 目标文件(没有扩展名) 源文件解压文件：unzip -d 解压后目录文件 压缩文件eg: zip -r myzip * unzip -d ./test myzip 2.查看命令位置:which 用法：which 命令 python@ubuntu:~$ which ls /bin/ls python@ubuntu:~$ which cd python@ubuntu:~$ 注意：cd是linux内置命令，用which无法找到 3.who,whoami 查看登录用户：who查看当前用户：whoami python@ubuntu:~$ who python tty7 2018-10-13 10:12 (:0) python@ubuntu:~$ whoami python 4.ssh,ping,exit,ifconfig 远程登录：ssh 用户名＠ip退出登录：exit查看或配置网卡信息：ifconfig(win为ipconfig)检查网络：ping python@ubuntu:~$ ssh python@192.168.17.68 python@ubuntu:~$ ping 192.168.17.68 5.快速跳转行首行末 跳转行首：ctrl+a跳转行末：ctrl+e 6.用户管理:useradd,passwd,su,userdel,sudo 添加账户：useradd添加密码：passwd切换账户：su注意：su -:切换账户后还会跳转到该账户下的家目录userdel 用户名userdel -r 用户名：删除用户账号的同时删除目录获取权限：sudo，如果接下来都需要权限的话，用sudo -s python@ubuntu:~$ sudo useradd yifchan -m -d /home/yifchan [sudo] python 的密码： python@ubuntu:~$ sudo passwd yifchan 输入新的 UNIX 密码： 重新输入新的 UNIX 密码： passwd：已成功更新密码 python@ubuntu:~$ su yifchan 密码： yifchan@ubuntu:/home/python$ python@ubuntu:~$ userdel -r yifchan 7.用户组 groupadd YYY：添加一个YYY用户组groupdel YYY：删除一个组cat /etc/group：查看有哪些用户组groups laowang表示：查看laowang所属的所有用户组usermod -g YYY laowang：把老王添加到YYY组里面usermod -a -G XXX laowang：把老王添加到XXX组里面-g 和 -G，-g指定的是默认的组useradd创建的新用户没有sudo，或者切换到root的权限，需要把这个用户添加到adm、sudo组里面才可以sudo usermod -a -G adm 用户名sudo usermod -a -G sudo 用户名 8.修改文件权限：chmod u：拥有者g：用户组o：其他人 r：read,4w：write,2x：执行,1 yifchan@ubuntu:/home/python/Desktop$ sudo chmod u-w 2.py yifchan@ubuntu:/home/python/Desktop$ ls -l 总用量 12 -rw-rw-r-- 1 python python 0 10月 11 16:46 1.py -r--r--r-- 1 root root 0 10月 13 17:34 2.py yifchan@ubuntu:/home/python/Desktop$ sudo chmod g+x 1.py yifchan@ubuntu:/home/python/Desktop$ ls -l 总用量 12 -rw-rwxr-- 1 python python 0 10月 11 16:46 1.py yifchan@ubuntu:/home/python/Desktop$ sudo chmod u=rwx,g=rwx,o=rwx 2.py yifchan@ubuntu:/home/python/Desktop$ ls -l 总用量 12 -rw-rwxr-x 1 python python 0 10月 11 16:46 1.py -rwxrwxrwx 1 root root 0 10月 13 17:34 2.py yifchan@ubuntu:/home/python/Desktop$ sudo chmod 764 2.py yifchan@ubuntu:/home/python/Desktop$ ls -l 总用量 12 -rw-rwxr-x 1 python python 0 10月 11 16:46 1.py -rwxrw-r-- 1 root root 0 10月 13 17:34 2.py root@ubuntu:~/Desktop# chmod 666 123 root@ubuntu:~/Desktop# ls -l 总用量 16 drw-rw-rw- 2 root root 4096 10月 13 18:15 123 root@ubuntu:~/Desktop/123# ls -l 总用量 0 -rw-r--r-- 1 root root 0 10月 13 18:15 1.py root@ubuntu:~/Desktop# chmod 777 123 -R root@ubuntu:~/Desktop# ls -l 总用量 16 drwxrwxrwx 2 root root 4096 10月 13 18:15 123 root@ubuntu:~/Desktop/123# ls -l 总用量 0 -rwxrwxrwx 1 root root 0 10月 13 18:15 1.py 9.chown,chgrp chown:修改文件所有者chgrp:修改文件所属组用法： chown 文件所有者 文件 chgrp 文件所属组 文件 -rwxrw-r-- 1 python root 0 10月 13 17:34 2.py root@ubuntu:~/Desktop# sudo chown python 2.py root@ubuntu:~/Desktop# ls -l 总用量 16 drwxrwxrwx 2 root root 4096 10月 13 18:15 123 -rw-rwxr-x 1 python python 0 10月 11 16:46 1.py -rwxrw-r-- 1 python root 0 10月 13 17:34 2.py root@ubuntu:~/Desktop# chgrp root 1.py root@ubuntu:~/Desktop# ls -l 总用量 16 drwxrwxrwx 2 root root 4096 10月 13 18:15 123 -rw-rwxr-x 1 python root 0 10月 11 16:46 1.py -rwxrw-r-- 1 python root 0 10月 13 17:34 2.py 10.时间日历:cal,date cal:查看日历date:单独可查看当前时间，附加其他可以用来修改时间和查看时间设置时间格式：date [MMDDhhmm[[CC]YY][.ss]] +format如：sudo date 101415562018.15,表示10月14号15时56分2018年15秒 11.进程:ps,top,kill ps:查看进程信息常用选项(选项可以不加“-”)如下：选项 含义-a 显示终端上的所有进程，包括其他用户的进程-u 显示进程的详细状态-x 显示没有控制终端的进程-w 显示加宽，以便显示更多的信息-r 只显示正在运行的进程 root@ubuntu:~/Desktop# cal root@ubuntu:~/Desktop# cal -y 2018 root@ubuntu:~/Desktop# date 2018年 10月 14日 星期日 15:47:54 CST root@ubuntu:~/Desktop# ps -aux top:动态显示进程在top命令执行后，可以按下按键得到对显示的结果进行排序：按键 含义M 根据内存使用量来排序P 根据CPU占有率来排序T 根据进程运行时间的长短来排序U 可以根据后面输入的用户名来筛选进程K 可以根据后面输入的PID来杀死进程。q 退出h 获得帮助 kill:终止进程用法：kill pid #(pid为进程序列号)kill -9 pid #绝对终止 12.关机重启:reboot、shutdown、init 命令 含义reboot 重新启动操作系统shutdown –r now 重新启动操作系统，shutdown会给别的用户提示shutdown -h now 立刻关机，其中now相当于时间为0的状态shutdown -h 20:25 系统在今天的20:25 会关机shutdown -h +10 系统再过十分钟后自动关机init 0 关机init 6 重启 13.检测磁盘空间：df,du df:检测磁盘空间df用于检测文件系统的磁盘空间占用和空余情况，可以显示所有文件系统对节点和磁盘块的使用情况。选项 含义-a 显示所有文件系统的磁盘使用情况-m 以1024字节为单位显示-t 显示各指定文件系统的磁盘空间使用情况-T 显示文件系统 du:检测目录所占磁盘空间du命令用于统计目录或文件所占磁盘空间的大小，该命令的执行结果与df类似，du更侧重于磁盘的使用状况。du命令的使用格式如下： du [选项] 目录或文件名选项 含义-a 递归显示指定目录中各文件和子目录中文件占用的数据块-s 显示指定文件或目录占用的数据块-b 以字节为单位显示磁盘占用情况-l 计算所有文件大小，对硬链接文件计算多次]]></content>
      <categories>
        <category>Linux基础</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux基础一]]></title>
    <url>%2F2018%2F10%2F11%2FLinux%E5%9F%BA%E7%A1%80%E4%B8%80%2F</url>
    <content type="text"><![CDATA[1.什么是操作系统如智能机器人，智能家居等，用C语言直接操作硬件，但我们用手机QQ发送消息时，QQ是应用程序，无法直接操作硬件，这个时候，操作系统就在应用程序和硬件中起媒介作用，让应用程序得以间接操作硬件。应用程序可以在操作系统上运行，操作系统可以直接操控硬件，这就是操作系统的作用。同时，操作系统支持让一个程序（如QQ）支持在不同的设备上（华为等手机）运行而不用每个品牌都有一个对应版本的QQ。 2.Linux的发展历史1969年，Ken Tompson为了能在一台闲置的电脑上运行“星际旅行”游戏，花了一个月的时间，编写出了UNIX的原型。 1970年，汤普逊在BCPL的基础上设计出了B语言，并且用B语言写出了第一个UNIX操作系统。但因为B语言的跨平台性比较差，很难移植到其他电脑上，于是他和丹尼斯(Dennis Ritchie)一起设计出了C语言，并迫不及待的用C语言完全重写了现在大名鼎鼎的UNIX。 后来因为UNIX闭源，Andrew S.Tanenbaum教授为了教学开发了MINIX(nini-UNIX)。 1991年4月，林纳斯·托瓦兹（学生）开始酝酿并着手编制自己的操作系统。1991年的10月5日，林纳斯·托瓦兹在发布消息，正式向外宣布Linux内核的诞生。而因为Linux的不断吸取广大使用者的意见进行改进，及unix和minix的版权纠纷，linux顺势崛起。 3.命令介绍页面放大：ctrl+shift+”+”页面缩小：ctrl+”-“ . 表示：当前路径..表示：当前路径的上一层路径没有…及以上，如果想要跳到上上层路径，可以使用绝对路径或者“cd../..” ls: ls:显示当前路径下的文件及文件夹的名字 ls /bin：查看根目录下的/bin文件夹下的东西 ls Document:查看当前路径下的Document下的所有东西 ls -a：查看隐藏文件 ls -l：以列表方式查看当前路径下的文件 ls -l -h：以合适的单位显示文件的大小 ls -a -l -h = ls -alh = ls -lah(作用一样) ls *.txt：显示所有以.txt结尾的文件 ls *.t?t：显示所有以.t(任意一个字符)t结尾的文件 ls *.t[xn]t：显示所有以.txt或.tnt结尾的文件 ls *.t[a-x]：同上，a-x指从a到x ls \*a：查找文件名为*a的文件 cd: cd Desktop:进入Desktop文件 cd..:返回上一级目录 cd- :返回上一次操作的目录（类似遥控中的回看） cd~：切换到当前用户的主目录(/home/用户目录) pwd:显示当前操作的路径（绝对路径）clear:清屏，也可以用快捷键ctrl+ltab键：用来自动补全touch:创建文件tree：以目录树的方式显示文件结构 输出重定向：将原来要显示的东西重新定位显示的方向 ls -ahl &gt;ls.txt：将ls -ahl命令要显示的东西在终端上不显示，覆盖式写入ls.txt中（类似于py中的”w”）。ls -ahl &gt;&gt;ls.txt：将ls -ahl命令要显示的东西在终端上不显示，追加式写入ls.txt中（类似于py中的”w+”）。 分屏显示 字符为“more”eg:more test.txt如果文件夹中的内容一屏显示不下，可以按空格键，一屏看完再看一屏；如果一屏能显示，则正常显示。但一般很少单独用more，更多的是和管道|一起用。 管道 字符为“|”eg:ls -ahl | more一次只能出现两个命令，但用管道的话，可以将ls -ahl的值暂时存储在管道中，more从管道中取值 创建文件夹 字符为“mkdir”eg:mkdir test.pymkdir A/B/C -p：递归创建A文件夹，A下创建B，B下创建C文件夹 删除文件夹 字符为“rmdir”只能删除空目录 删除文件 字符为“rm”可删除任意文件但不能删除文件夹，且不会放入回收站rm test -r,可删除文件及文件夹，递归的删rm test -i,交互的删除文件，会进行提示是否删除rm test -f, 强制的删除，忽略不存在的文件，无需提示 ln软链接与硬链接 格式： 软：ln -s 源文件 链接文件 硬：ln 源文件 链接文件eg: ln -s test.txt softlink_test.txt ln test.txt hardlink_test.txt区别：软链接相当于windows中的快捷方式，源文件被删了则软链接也无法使用；硬链接则相当于一个文件的两个名字，删除了源文件，把源文件名指向源文件的线断了，但硬链接还是指向源文件。 查看和合并文件：cat cat 01.py &gt;laowang.txt：把查看的内容copy给laozhang.txt cat 01.py 02.py：查看01.py和02.py cat 01.py 02.py &gt;laoliu.txt：把查看的两个文件的内容赋值给laoliu.txt 文本搜索：grep 选项 含义-v 显示不包含匹配文本的所有行（相当于求反）-n 显示匹配行及行号-i 忽略大小写eg: &apos;&apos;&apos; python@ubuntu:~/Desktop$ grep -n &apos;a&apos; test.txt 3:a.txt 6:java python@ubuntu:~/Desktop$ grep -n -i &apos;a&apos; test.txt 2:A 3:a.txt 6:java python@ubuntu:~/Desktop$ grep -n -v &apos;a&apos; test.txt 1:1.py 2:A 4:b.txt 5:c 7:python 8:t1.py 9:test.txt &apos;&apos;&apos; 除此之外，’’中也可以是正则表达式 查看历史命令：history 帮助文档:help,man eg:ls –helpcd –helpman ls 查找文件：find 常用用法：命令 含义find ./ -name test.sh 查找当前目录下所有名为test.sh的文件find ./ -name ‘*.sh’ 查找当前目录下所有后缀为.sh的文件find ./ -name “[A-Z]*“ 查找当前目录下所有以大写字母开头的文件find /tmp -size 2M 查找在/tmp 目录下等于2M的文件find /tmp -size +2M 查找在/tmp 目录下大于2M的文件find /tmp -size -2M 查找在/tmp 目录下小于2M的文件find ./ -size +4k -size -5M 查找当前目录下大于4k，小于5M的文件find ./ -perm 0777 查找当前目录下权限为 777 的文件或目录 grep和find的差别是，grep是查找文件中的内容，而find是查找文件 拷贝：cp 常用用法-a 该选项通常在复制目录时使用，它保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性。-f 已经存在的目标文件而不提示-i 交互式复制，在覆盖目标文件之前将给出提示要求用户确认-r 若给出的源文件是目录文件，则cp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名。-v 显示拷贝进度eg:cp a/* b -r:拷贝a文件夹下的所有文件到b文件中cp a b -r:拷贝a文件夹到b文件中cp *.t?t b:拷贝所有以.t?t结尾的文件到b文件夹下 剪切文件：mv 命令说明-f 禁止交互式操作，如有覆盖也不会给出提示-i 确认交互方式操作，如果mv操作将导致对已存在的目标文件的覆盖，系统会询问是否重写，要求用户回答以避免误覆盖文件-v 显示移动进度eg:mv a b:mv a整体文件夹到b文件夹里面去mv a/* b:mv a文件夹下的所有文件到b文件夹里面去mv 1.tyt 1.txt:相当于重命名1.tyt 打包压缩 打包：tar -cvf Test.tar * 解包：tar -xvf Test.tar 压缩：gzip Test.tar 解压缩：gzip -d Test.tar.gz 打包压缩：tar -zcvf test.tar.gz * 解压缩：tar -zxvf test.tar.gz 解压缩到指定文件：tar -zxvf test.tar.gz -C chen/ bzip2打包压缩：tar -jcvf test.tar.bz2 * bzip2解压缩：tar -zxvf test.tar.bz2]]></content>
      <categories>
        <category>Linux基础</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F07%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
